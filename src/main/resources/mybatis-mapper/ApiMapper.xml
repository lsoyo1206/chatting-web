<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chattingweb.api.repository.ServerApiRepository">
    <!-- INSERT 쿼리문 -->
    <insert id="insertPostDto" parameterType="PostDto" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO chattingWeb.TB_POST (
                title,
                content,
                user_id
                <if test="locationRegistered == 'true'">
                , location_registered
                </if>
        )
        VALUES (
                #{title}  ,
                #{content},
                #{userId}
                <if test="locationRegistered == 'true'">
                , 'Y'
                </if>
                )
    </insert>

    <insert id="insertLocation" parameterType="Map" useGeneratedKeys="true" keyProperty="locationId">
        INSERT INTO chattingWeb.TB_LOCATION (
                post_id,
                location_name,
                <if test="address != null and address != ''">
                    address,
                </if>
                <if test="roadAddress != null and roadAddress != ''">
                    road_address,
                </if>
                longitude,
                latitude
        )
        VALUES (
                #{postId},
                #{locationName},
                <if test="address != null and address != ''">
                    #{address},
                </if>
                <if test="roadAddress != null and roadAddress != ''">
                    #{roadAddress},
                </if>
                #{longitude},
                #{latitude}
        )
    </insert>

    <update id="updateLocation" parameterType="Map">
        UPDATE chattingWeb.TB_LOCATION
        SET
        location_name = #{locationName},
        <if test="address != null and address != ''">
            address = #{address},
        </if>
        <if test="roadAddress != null and roadAddress != ''">
            road_address = #{roadAddress},
        </if>
        longitude = #{longitude},
        latitude = #{latitude},
        use_yn = 'Y'
        WHERE post_id = #{postId}
    </update>


    <update id="updatePostLocationId" parameterType="PostDto">
        UPDATE chattingWeb.TB_POST
        SET location_id = #{locationId}
        WHERE post_id = #{postId}
    </update>

    <select id="selectPostsByUserId" resultType="Map" parameterType="User">
        SELECT  p.post_id as postId,
                p.location_id as locationId,
                p.user_id as userId,
                p.title   as title,
                p.content  as content,
                p.location_registered as locationRegistered,
                p.createDt as createDt,
                p2.location_name as locationName,
                p2.address as address,
                p2.road_address as roadAddress,
                p2.longitude as longitude,
                p2.latitude as latitude,
                tp.GROUP_V_ORDER as groupVOrder,
                tp.FILE_PATH as filePath,
                tp.FILE_NAME as fileName,
                tp.FILE_EXTENSION as fileExtension
        FROM (
                SELECT * FROM chattingWeb.TB_POST WHERE user_yn = 'Y'
            ) p
        LEFT JOIN (
                SELECT * FROM chattingWeb.TB_LOCATION WHERE use_yn = 'Y'
        ) p2
        ON p.post_id = p2.post_id
        LEFT JOIN (
                SELECT * FROM chattingWeb.TB_PHOTO WHERE user_yn = 'Y'
        ) tp
        ON p.post_id = tp.post_id
        WHERE 1=1
        AND p.user_yn = 'Y'
        AND p.user_id = #{userId}
        AND (tp.GROUP_V_ORDER = 0 OR tp.GROUP_V_ORDER is null)
        order by p.post_id desc , p.createDt
        LIMIT #{start}, #{pageSize}
    </select>

    <select id="selectPostsByUserIdTotalPage" resultType="int" parameterType="User">
        SELECT CEIL(count(*)/#{pageSize})
        FROM (
                SELECT * FROM chattingWeb.TB_POST WHERE user_yn = 'Y'
            ) p
        LEFT JOIN (
            SELECT * FROM chattingWeb.TB_LOCATION WHERE use_yn = 'Y'
            ) p2
            ON p.post_id = p2.post_id
        LEFT JOIN (
            SELECT * FROM chattingWeb.TB_PHOTO WHERE user_yn = 'Y'
            ) tp
            ON p.post_id = tp.post_id
        WHERE 1=1
        AND p.user_yn = 'Y'
        AND p.user_id = #{userId}
        AND (tp.GROUP_V_ORDER = 0 OR tp.GROUP_V_ORDER is null)
    </select>

    <update id="updatePostDto" parameterType="PostDto">
        update chattingWeb.TB_POST
        SET
             title = #{title}
                 , content = #{content}
             <if test="locationRegistered == 'true'">
                 , location_registered = 'Y'
             </if>
            <if test="locationRegistered == 'false'">
                , location_registered = 'N'
            </if>
        WHERE post_id = #{postId}
    </update>

    <!-- locationId 삭제 -->
    <update id="updateLocationId" parameterType="PostDto">
        update chattingWeb.TB_POST
        SET    location_id = NULL
        WHERE post_id = #{postId}
    </update>

    <insert id="insertPhote" parameterType="PhotoDto" useGeneratedKeys="true" keyProperty="photoId">
        INSERT INTO chattingWeb.TB_PHOTO
        (
                post_id,
                GROUP_V_ORDER,
                FILE_PATH,
                FILE_NAME,
                FILE_EXTENSION,
                FILE_SIZE
        )
        VALUES
        (
                #{postId},
                #{groupVOrder},
                #{filePath},
                #{fileName},
                #{fileExtension},
                #{fileSize}
        )
    </insert>

    <update id="updatePhoteUploadPhoteId" parameterType="Map">
        UPDATE chattingWeb.post
        SET photo_id = #{photoId}
        WHERE post_id = #{postId}
    </update>

    <update id="updatePostId" parameterType="Map">
        UPDATE chattingWeb.TB_POST
        SET photo_id = #{photoId}
        WHERE post_id = #{postId}
    </update>

    <update id="deletePostTable" parameterType="int">
        update chattingWeb.TB_POST
        SET user_yn = 'N'
        WHERE post_id = #{postId}
    </update>

    <update id="deleteLocationTable" parameterType="int">
        update chattingWeb.TB_LOCATION
        SET use_yn ='N'
        WHERE post_id = #{postId}
    </update>

    <update id="deletePhotoTable" parameterType="int">
        update chattingWeb.TB_PHOTO
        SET user_yn = 'N'
        WHERE post_id = #{postId}
    </update>

    <select id="selectLocationInfo" resultType="Map" parameterType="int">
        select
            location_id as locationId,
            post_id     as postId,
            location_name as locationName,
            address as address,
            road_address as roadAddress,
            longitude as  longitude,
            latitude as latitude
        from TB_LOCATION
        where 1=1
        and   location_id = #{locationId}
        and   use_yn = 'Y'
    </select>

    <select id="selectPostDetailInfo" resultType="PostDto" parameterType="Map">
        SELECT
                p.post_id as postId,
                p.location_id as locationId,
                p.photo_id as photoId,
                p.title as title,
                p.content as content,
                p.location_registered as locationRegistered,
                p2.location_name as locationName,
                p2.address as address,
                p2.road_address as roadAddress,
                p2.longitude as longitude,
                p2.latitude as latitude
        FROM (
            SELECT * FROM chattingWeb.TB_POST where user_yn = 'Y'
        ) p
        LEFT JOIN (
            SELECT * FROM chattingWeb.TB_LOCATION WHERE use_yn = 'Y'
        ) p2
        ON p.post_id = p2.post_id
        WHERE 1=1
        AND p.post_id = #{postId}
    </select>

    <select id="selectPhotoDetailInfo" resultType="PhotoDto" parameterType="int">
        SELECT
                p.photo_id as photoId,
                p.post_id  as postId,
                p.GROUP_V_ORDER as groupVOrder,
                p.FILE_PATH as filePath,
                p.FILE_NAME as fileName,
                p.FILE_EXTENSION as fileExtension
        FROM chattingWeb.TB_PHOTO p
        WHERE 1=1
        AND p.user_yn = 'Y'
        AND p.post_id  = #{postId}
    </select>

    <select id="selectPhotoToDelete" resultType="PhotoDto" parameterType="int">
        SELECT
                photo_id as photoId,
                post_id as postId,
                GROUP_V_ORDER as groupVOrder,
                FILE_PATH as filePath,
                FILE_NAME as fileName,
                FILE_EXTENSION as fileExtension
        FROM TB_PHOTO
        where 1=1
        and   post_id = #{postId}
        and   user_yn = 'Y'
    </select>

    <select id="NewLocationSelector" resultType="Map" parameterType="Map">
        select code, UP_CODE ,CODE_LEVEL , sido_name ,sigungu_name, dong_name , lee_name , ranking
        from TB_RESION
        where 1=1
        and   delete_date = ''
        <if test='code_level == 1'>
            AND CODE_LEVEL = #{code_level}
        </if>
        <if test='code_level != 1'>
            AND UP_CODE = #{up_code}
            AND CODE_LEVEL = #{code_level}
        </if>
        <if test='code_level != 1'>
            ORDER BY ranking
        </if>
    </select>
</mapper>