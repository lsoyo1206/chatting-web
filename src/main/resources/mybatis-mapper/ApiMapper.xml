<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.chattingweb.api.repository.ServerApiRepository">
    <!-- INSERT 쿼리문 -->
    <insert id="insertPostDto" parameterType="PostDto" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO chattingWeb.TB_POST (
                title,
                content,
                user_id
                <if test="locationRegistered == 'true'">
                , location_registered
                </if>
        )
        VALUES (
                #{title}  ,
                #{content},
                #{userId}
                <if test="locationRegistered == 'true'">
                , 'Y'
                </if>
                )
    </insert>

    <insert id="insertLocation" parameterType="Map" useGeneratedKeys="true" keyProperty="locationId">
        INSERT INTO chattingWeb.TB_LOCATION (
                post_id,
                location_name,
                <if test="address != null and address != ''">
                    address,
                </if>
                <if test="roadAddress != null and roadAddress != ''">
                    road_address,
                </if>
                longitude,
                latitude
        )
        VALUES (
                #{postId},
                #{locationName},
                <if test="address != null and address != ''">
                    #{address},
                </if>
                <if test="roadAddress != null and roadAddress != ''">
                    #{roadAddress},
                </if>
                #{longitude},
                #{latitude}
        )
    </insert>

    <update id="updatePostLocationId" parameterType="PostDto">
        UPDATE chattingWeb.TB_POST
        SET location_id = #{locationId}
        WHERE post_id = #{postId}
    </update>

    <select id="selectPostsByUserId" resultType="Map" parameterType="User">
        SELECT  p.post_id as postId,
                p.location_id as locationId,
                p.user_id as userId,
                p.title   as title,
                p.content  as content,
                p.location_registered as locationRegistered,
                p.createDt as createDt,
                p2.location_name as locationName,
                p2.address as address,
                p2.road_address as roadAddress,
                p2.longitude as longitude,
                p2.latitude as latitude,
                tp.GROUP_V_ORDER as groupVOrder,
                tp.FILE_PATH as filePath,
                tp.FILE_NAME as fileName,
                tp.FILE_EXTENSION as fileExtension
        FROM chattingWeb.TB_POST p
        LEFT JOIN chattingWeb.TB_LOCATION p2 ON p.post_id = p2.post_id
        LEFT JOIN chattingWeb.TB_PHOTO tp ON p.post_id = tp.post_id
        WHERE 1=1
        AND p.user_yn = 'Y'
        AND p.user_id = #{userId}
        AND tp.GROUP_V_ORDER = 0  OR tp.GROUP_V_ORDER is null
        order by p.post_id desc , p.createDt
        LIMIT #{start}, #{pageSize}
    </select>

    <select id="selectPostsByUserIdTotalPage" resultType="int" parameterType="User">
        SELECT CEIL(count(*)/5)
        FROM chattingWeb.TB_POST p
        LEFT JOIN chattingWeb.TB_LOCATION p2 ON p.post_id = p2.post_id
        WHERE 1=1
        AND p.user_yn = 'Y'
        AND p.user_id = #{userId}
    </select>

    <!-- INSERT 쿼리문 -->
    <insert id="insertPhote" parameterType="PhotoDto" useGeneratedKeys="true" keyProperty="photoId">
        INSERT INTO chattingWeb.TB_PHOTO
        (
                post_id,
                GROUP_V_ORDER,
                FILE_PATH,
                FILE_NAME,
                FILE_EXTENSION,
                FILE_SIZE
        )
        VALUES
        (
                #{postId},
                #{groupVOrder},
                #{filePath},
                #{fileName},
                #{fileExtension},
                #{fileSize}
        )
    </insert>

    <update id="updatePhoteUploadPhoteId" parameterType="Map">
        UPDATE chattingWeb.post
        SET photo_id = #{photoId}
        WHERE post_id = #{postId}
    </update>

    <update id="updatePostId" parameterType="Map">
        UPDATE chattingWeb.TB_POST
        SET photo_id = #{photoId}
        WHERE post_id = #{postId}
    </update>

    <select id="selectPlaceInfo" resultType="int" parameterType="Map">
        select *
        from chattingWeb.place p
        where 1=1
          and   p.place_id =#{placeId}
    </select>

    <select id="selectPostDetailInfo" resultType="PostDto" parameterType="Map">
        SELECT
                p.post_id as postId,
                p.location_id as locationId,
                p.photo_id as photoId,
                p.title as title,
                p.content as content,
                p.location_registered as locationRegistered,
                p2.location_name as locationName,
                p2.address as address,
                p2.road_address as roadAddress
        FROM chattingWeb.TB_POST p
        LEFT JOIN chattingWeb.TB_LOCATION p2 ON p.post_id = p2.post_id
        WHERE 1=1
        AND p.user_yn = 'Y'
        AND p.user_id = #{userId}
        AND p.post_id = #{postId}
    </select>

    <select id="selectPhotoDetailInfo" resultType="PhotoDto" parameterType="int">
        SELECT
                p.photo_id as photoId,
                p.GROUP_V_ORDER as groupVOrder,
                p.FILE_PATH as filePath,
                p.FILE_NAME as fileName,
                p.FILE_EXTENSION as fileExtension
        FROM chattingWeb.TB_PHOTO p
        WHERE 1=1
        AND p.user_yn = 'Y'
        AND p.post_id  = #{postId}
    </select>
</mapper>